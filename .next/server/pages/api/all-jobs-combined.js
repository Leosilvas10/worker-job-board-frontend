"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/all-jobs-combined";
exports.ids = ["pages/api/all-jobs-combined"];
exports.modules = {

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fall-jobs-combined&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fall-jobs-combined.js&middlewareConfigBase64=e30%3D!":
/*!****************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fall-jobs-combined&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fall-jobs-combined.js&middlewareConfigBase64=e30%3D! ***!
  \****************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_all_jobs_combined_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/all-jobs-combined.js */ \"(api-node)/./pages/api/all-jobs-combined.js\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_all_jobs_combined_js__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_all_jobs_combined_js__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/all-jobs-combined\",\n        pathname: \"/api/all-jobs-combined\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_all_jobs_combined_js__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtcm91dGUtbG9hZGVyL2luZGV4LmpzP2tpbmQ9UEFHRVNfQVBJJnBhZ2U9JTJGYXBpJTJGYWxsLWpvYnMtY29tYmluZWQmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyUyRmFwaSUyRmFsbC1qb2JzLWNvbWJpbmVkLmpzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNFO0FBQzFEO0FBQzZEO0FBQzdEO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyw0REFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMsNERBQVE7QUFDcEM7QUFDTyx3QkFBd0IseUdBQW1CO0FBQ2xEO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLW1vZHVsZXMvcGFnZXMtYXBpL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlcy9hcGkvYWxsLWpvYnMtY29tYmluZWQuanNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgJ2RlZmF1bHQnKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsICdjb25maWcnKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2FsbC1qb2JzLWNvbWJpbmVkXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYWxsLWpvYnMtY29tYmluZWRcIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiAnJyxcbiAgICAgICAgZmlsZW5hbWU6ICcnXG4gICAgfSxcbiAgICB1c2VybGFuZFxufSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXBhZ2VzLWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fall-jobs-combined&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fall-jobs-combined.js&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/all-jobs-combined.js":
/*!****************************************!*\
  !*** ./pages/api/all-jobs-combined.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n// API que busca vagas do backend em produ√ß√£o\nasync function handler(req, res) {\n    try {\n        console.log('üîÑ Buscando vagas do backend em produ√ß√£o...');\n        if (req.method !== 'GET') {\n            return res.status(405).json({\n                success: false,\n                message: 'M√©todo n√£o permitido'\n            });\n        }\n        const BACKEND_URL = \"https://worker-job-board-backend-leonardosilvas2.replit.app\" || 0;\n        // Fun√ß√£o para calcular tempo relativo\n        function calculateTimeAgo(createdAt) {\n            if (!createdAt) return 'Recente';\n            const now = new Date();\n            const created = new Date(createdAt);\n            const diffInMinutes = Math.floor((now - created) / (1000 * 60));\n            if (diffInMinutes < 60) {\n                return `H√° ${diffInMinutes} min`;\n            } else if (diffInMinutes < 1440) {\n                const hours = Math.floor(diffInMinutes / 60);\n                return `H√° ${hours}h`;\n            } else {\n                const days = Math.floor(diffInMinutes / 1440);\n                return `H√° ${days}d`;\n            }\n        }\n        // Fun√ß√£o para determinar categoria baseada no t√≠tulo\n        function getCategoryFromTitle(title) {\n            if (!title) return 'Geral';\n            const titleLower = title.toLowerCase();\n            if (titleLower.includes('dom√©st') || titleLower.includes('diarista')) return 'Dom√©stica';\n            if (titleLower.includes('porteiro') || titleLower.includes('vigilante')) return 'Seguran√ßa';\n            if (titleLower.includes('limpeza') || titleLower.includes('faxina')) return 'Limpeza';\n            if (titleLower.includes('cuidador') || titleLower.includes('bab√°')) return 'Cuidados';\n            if (titleLower.includes('motorista') || titleLower.includes('entregador')) return 'Transporte';\n            if (titleLower.includes('cozinha') || titleLower.includes('gar√ß')) return 'Alimenta√ß√£o';\n            if (titleLower.includes('vend') || titleLower.includes('comercial')) return 'Vendas';\n            if (titleLower.includes('recep') || titleLower.includes('admin')) return 'Administrativo';\n            return 'Geral';\n        }\n        // Fun√ß√£o para gerar URL de redirecionamento para vagas reais\n        function generateJobRedirectUrl(job) {\n            const category = getCategoryFromTitle(job.title);\n            const categoryUrls = {\n                'Dom√©stica': 'https://www.catho.com.br/vagas/empregada-domestica/',\n                'Seguran√ßa': 'https://www.catho.com.br/vagas/porteiro/',\n                'Limpeza': 'https://www.catho.com.br/vagas/auxiliar-limpeza/',\n                'Cuidados': 'https://www.catho.com.br/vagas/cuidador/',\n                'Transporte': 'https://www.catho.com.br/vagas/motorista/',\n                'Alimenta√ß√£o': 'https://www.catho.com.br/vagas/cozinheiro/',\n                'Vendas': 'https://www.catho.com.br/vagas/vendedor/',\n                'Administrativo': 'https://www.catho.com.br/vagas/auxiliar-administrativo/'\n            };\n            return categoryUrls[category] || 'https://www.catho.com.br/vagas/';\n        }\n        // Fun√ß√£o para gerar vagas complementares baseadas nas estat√≠sticas\n        function generateComplementaryJobs(totalJobs, statsData) {\n            const complementaryJobs = [];\n            const jobTitles = [\n                {\n                    title: 'Empregada Dom√©stica',\n                    company: 'Fam√≠lia Particular',\n                    salary: 'R$ 1.320,00',\n                    category: 'Dom√©stica'\n                },\n                {\n                    title: 'Diarista',\n                    company: 'Residencial',\n                    salary: 'R$ 120,00/dia',\n                    category: 'Dom√©stica'\n                },\n                {\n                    title: 'Cuidadora de Idosos',\n                    company: 'Cuidados Senior',\n                    salary: 'R$ 1.800,00',\n                    category: 'Cuidados'\n                },\n                {\n                    title: 'Bab√°',\n                    company: 'Fam√≠lia',\n                    salary: 'R$ 1.600,00',\n                    category: 'Cuidados'\n                },\n                {\n                    title: 'Porteiro Diurno',\n                    company: 'Condom√≠nio',\n                    salary: 'R$ 1.500,00',\n                    category: 'Seguran√ßa'\n                },\n                {\n                    title: 'Porteiro Noturno',\n                    company: 'Edif√≠cio',\n                    salary: 'R$ 1.600,00',\n                    category: 'Seguran√ßa'\n                },\n                {\n                    title: 'Vigilante',\n                    company: 'Empresa de Seguran√ßa',\n                    salary: 'R$ 1.700,00',\n                    category: 'Seguran√ßa'\n                },\n                {\n                    title: 'Auxiliar de Limpeza',\n                    company: 'Clean Service',\n                    salary: 'R$ 1.400,00',\n                    category: 'Limpeza'\n                },\n                {\n                    title: 'Faxineira',\n                    company: 'Empresa',\n                    salary: 'R$ 1.320,00',\n                    category: 'Limpeza'\n                },\n                {\n                    title: 'Copeira',\n                    company: 'Escrit√≥rio',\n                    salary: 'R$ 1.350,00',\n                    category: 'Limpeza'\n                },\n                {\n                    title: 'Jardineiro',\n                    company: 'Paisagismo Verde',\n                    salary: 'R$ 1.350,00',\n                    category: 'Jardinagem'\n                },\n                {\n                    title: 'Motorista Particular',\n                    company: 'Fam√≠lia',\n                    salary: 'R$ 2.200,00',\n                    category: 'Transporte'\n                },\n                {\n                    title: 'Motorista de Aplicativo',\n                    company: 'Uber/99',\n                    salary: 'R$ 2.000,00',\n                    category: 'Transporte'\n                },\n                {\n                    title: 'Entregador',\n                    company: 'Delivery Express',\n                    salary: 'R$ 1.800,00',\n                    category: 'Log√≠stica'\n                },\n                {\n                    title: 'Entregador de Moto',\n                    company: 'iFood/Rappi',\n                    salary: 'R$ 2.100,00',\n                    category: 'Log√≠stica'\n                },\n                {\n                    title: 'Vendedor',\n                    company: 'Loja Comercial',\n                    salary: 'R$ 1.500,00 + comiss√£o',\n                    category: 'Vendas'\n                },\n                {\n                    title: 'Vendedor de Loja',\n                    company: 'Shopping',\n                    salary: 'R$ 1.450,00',\n                    category: 'Vendas'\n                },\n                {\n                    title: 'Promotor de Vendas',\n                    company: 'Supermercado',\n                    salary: 'R$ 1.380,00',\n                    category: 'Vendas'\n                },\n                {\n                    title: 'Atendente',\n                    company: 'Com√©rcio Local',\n                    salary: 'R$ 1.400,00',\n                    category: 'Atendimento'\n                },\n                {\n                    title: 'Recepcionista',\n                    company: 'Cl√≠nica',\n                    salary: 'R$ 1.450,00',\n                    category: 'Atendimento'\n                },\n                {\n                    title: 'Operador de Caixa',\n                    company: 'Supermercado',\n                    salary: 'R$ 1.380,00',\n                    category: 'Atendimento'\n                },\n                {\n                    title: 'Cozinheira',\n                    company: 'Restaurante',\n                    salary: 'R$ 1.600,00',\n                    category: 'Alimenta√ß√£o'\n                },\n                {\n                    title: 'Ajudante de Cozinha',\n                    company: 'Lanchonete',\n                    salary: 'R$ 1.350,00',\n                    category: 'Alimenta√ß√£o'\n                },\n                {\n                    title: 'Gar√ßom/Gar√ßonete',\n                    company: 'Restaurante',\n                    salary: 'R$ 1.400,00 + gorjetas',\n                    category: 'Alimenta√ß√£o'\n                },\n                {\n                    title: 'Auxiliar de Padaria',\n                    company: 'Padaria Local',\n                    salary: 'R$ 1.320,00',\n                    category: 'Alimenta√ß√£o'\n                },\n                {\n                    title: 'Passadeira',\n                    company: 'Lavanderia',\n                    salary: 'R$ 1.300,00',\n                    category: 'Servi√ßos'\n                },\n                {\n                    title: 'Caseiro',\n                    company: 'S√≠tio Particular',\n                    salary: 'R$ 2.000,00',\n                    category: 'Servi√ßos'\n                },\n                {\n                    title: 'Zelador',\n                    company: 'Pr√©dio Comercial',\n                    salary: 'R$ 1.450,00',\n                    category: 'Servi√ßos'\n                },\n                {\n                    title: 'Auxiliar de Manuten√ß√£o',\n                    company: 'Condom√≠nio',\n                    salary: 'R$ 1.550,00',\n                    category: 'Servi√ßos'\n                },\n                {\n                    title: 'Servente de Obras',\n                    company: 'Construtora',\n                    salary: 'R$ 1.400,00',\n                    category: 'Constru√ß√£o'\n                },\n                {\n                    title: 'Pedreiro',\n                    company: 'Reforma Geral',\n                    salary: 'R$ 2.500,00',\n                    category: 'Constru√ß√£o'\n                },\n                {\n                    title: 'Ajudante Geral',\n                    company: 'Ind√∫stria',\n                    salary: 'R$ 1.450,00',\n                    category: 'Geral'\n                },\n                {\n                    title: 'Operador de M√°quinas',\n                    company: 'F√°brica',\n                    salary: 'R$ 1.800,00',\n                    category: 'Industrial'\n                },\n                {\n                    title: 'Estoquista',\n                    company: 'Dep√≥sito',\n                    salary: 'R$ 1.400,00',\n                    category: 'Log√≠stica'\n                },\n                {\n                    title: 'Conferente',\n                    company: 'Centro de Distribui√ß√£o',\n                    salary: 'R$ 1.500,00',\n                    category: 'Log√≠stica'\n                },\n                {\n                    title: 'Auxiliar Administrativo',\n                    company: 'Escrit√≥rio',\n                    salary: 'R$ 1.500,00',\n                    category: 'Administrativo'\n                },\n                {\n                    title: 'Assistente de Vendas',\n                    company: 'Concession√°ria',\n                    salary: 'R$ 1.600,00',\n                    category: 'Vendas'\n                },\n                {\n                    title: 'T√©cnico em Manuten√ß√£o',\n                    company: 'Empresa',\n                    salary: 'R$ 2.200,00',\n                    category: 'T√©cnico'\n                },\n                {\n                    title: 'Soldador',\n                    company: 'Metal√∫rgica',\n                    salary: 'R$ 2.800,00',\n                    category: 'Industrial'\n                },\n                {\n                    title: 'Pintor',\n                    company: 'Construtora',\n                    salary: 'R$ 2.000,00',\n                    category: 'Constru√ß√£o'\n                }\n            ];\n            const locations = [\n                'S√£o Paulo, SP',\n                'Rio de Janeiro, RJ',\n                'Belo Horizonte, MG',\n                'Bras√≠lia, DF',\n                'Salvador, BA',\n                'Curitiba, PR',\n                'Fortaleza, CE',\n                'Recife, PE',\n                'Porto Alegre, RS',\n                'Manaus, AM',\n                'Bel√©m, PA',\n                'Goi√¢nia, GO'\n            ];\n            for(let i = 0; i < totalJobs; i++){\n                const jobTemplate = jobTitles[i % jobTitles.length];\n                const location = locations[i % locations.length];\n                // Determinar URL real baseada no tipo de vaga\n                let redirectUrl = 'https://www.catho.com.br/vagas/';\n                const title = jobTemplate.title.toLowerCase();\n                if (title.includes('bab√°') || title.includes('baba')) {\n                    redirectUrl = 'https://www.catho.com.br/vagas/baba/';\n                } else if (title.includes('dom√©stica') || title.includes('diarista')) {\n                    redirectUrl = 'https://www.catho.com.br/vagas/empregada-domestica/';\n                } else if (title.includes('porteiro') || title.includes('vigilante')) {\n                    redirectUrl = 'https://www.catho.com.br/vagas/porteiro/';\n                } else if (title.includes('cuidador')) {\n                    redirectUrl = 'https://www.catho.com.br/vagas/cuidador/';\n                } else if (title.includes('motorista')) {\n                    redirectUrl = 'https://www.catho.com.br/vagas/motorista/';\n                } else if (title.includes('vendedor') || title.includes('atendente')) {\n                    redirectUrl = 'https://www.catho.com.br/vagas/vendedor/';\n                } else if (title.includes('limpeza') || title.includes('faxineira')) {\n                    redirectUrl = 'https://www.catho.com.br/vagas/auxiliar-limpeza/';\n                } else if (title.includes('jardineiro')) {\n                    redirectUrl = 'https://www.catho.com.br/vagas/jardineiro/';\n                } else if (title.includes('cozinha') || title.includes('cozinheira')) {\n                    redirectUrl = 'https://www.catho.com.br/vagas/cozinheiro/';\n                }\n                complementaryJobs.push({\n                    id: `complementary_${i + 1}`,\n                    title: jobTemplate.title,\n                    company: `${jobTemplate.company} - ${location.split(',')[0]}`,\n                    location: location,\n                    salary: jobTemplate.salary,\n                    description: `Oportunidade para ${jobTemplate.title.toLowerCase()} em empresa s√©ria. Requisitos: experi√™ncia na √°rea, responsabilidade e dedica√ß√£o. Entre em contato para mais informa√ß√µes.`,\n                    type: 'CLT',\n                    category: jobTemplate.category,\n                    source: 'Backend Stats',\n                    isExternal: true,\n                    requiresLead: true,\n                    priority: 'medium',\n                    created_at: new Date(Date.now() - i * 3600000).toISOString(),\n                    tags: [\n                        jobTemplate.title.toLowerCase().replace(/\\s+/g, '-')\n                    ],\n                    redirectUrl: redirectUrl,\n                    realJobSource: 'Catho'\n                });\n            }\n            return complementaryJobs;\n        }\n        // Fun√ß√£o principal para buscar todas as vagas\n        async function getAllJobsCombined() {\n            try {\n                console.log('üîÑ Buscando vagas reais do backend agendado...');\n                console.log('üîó Conectando ao backend:', BACKEND_URL);\n                // Buscar vagas reais do endpoint /api/jobs\n                console.log('üîó Tentando conectar ao backend:', `${BACKEND_URL}/api/jobs`);\n                const jobsResponse = await fetch(`${BACKEND_URL}/api/jobs`, {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'User-Agent': 'Frontend-Jobs-API',\n                        'Accept': 'application/json'\n                    },\n                    timeout: 10000\n                });\n                console.log('üì° Status da resposta do backend (jobs):', jobsResponse.status);\n                console.log('üì° Headers da resposta:', Object.fromEntries(jobsResponse.headers.entries()));\n                let formattedJobs = [];\n                if (jobsResponse.ok) {\n                    const jobsData = await jobsResponse.json();\n                    console.log('üìä ESTRUTURA COMPLETA recebida do backend:');\n                    console.log('- Chaves dispon√≠veis:', Object.keys(jobsData));\n                    console.log('- Tipo de dados:', typeof jobsData);\n                    console.log('- Jobs array length:', jobsData.jobs?.length || 'N/A');\n                    console.log('- Total informado:', jobsData.total || 'N/A');\n                    if (jobsData.jobs && Array.isArray(jobsData.jobs) && jobsData.jobs.length > 0) {\n                        console.log(`‚úÖ ${jobsData.jobs.length} vagas REAIS carregadas do backend!`);\n                        console.log('üìã Primeira vaga de exemplo:', jobsData.jobs[0]);\n                        // Converter formato das vagas para compatibilidade com o frontend\n                        formattedJobs = jobsData.jobs.map((job)=>({\n                                id: job.id,\n                                title: job.title,\n                                company: job.company,\n                                location: job.location,\n                                salary: job.salary,\n                                type: job.type,\n                                description: job.description,\n                                source: 'Backend Real Jobs',\n                                timeAgo: job.timeAgo || 'Recente',\n                                tags: job.tags || [],\n                                isExternal: true,\n                                requiresLead: true,\n                                priority: 'high',\n                                created_at: job.created_at || new Date().toISOString(),\n                                url: job.url,\n                                redirectUrl: job.url // Garantir compatibilidade\n                            }));\n                    }\n                }\n                // Se temos poucas vagas reais, adicionar mais vagas complementares\n                if (formattedJobs.length < 20) {\n                    console.log(`‚ö†Ô∏è Apenas ${formattedJobs.length} vagas reais, adicionando vagas complementares...`);\n                    // Buscar estat√≠sticas para determinar quantas vagas criar\n                    try {\n                        const statsResponse = await fetch(`${BACKEND_URL}/api/stats`, {\n                            method: 'GET',\n                            headers: {\n                                'Content-Type': 'application/json',\n                                'User-Agent': 'Frontend-Jobs-API'\n                            }\n                        });\n                        let statsData = {};\n                        if (statsResponse.ok) {\n                            statsData = await statsResponse.json();\n                            console.log('üìä Estat√≠sticas recebidas:', statsData);\n                        }\n                        // Criar vagas complementares para completar 100 vagas\n                        const totalToCreate = Math.max(100 - formattedJobs.length, 50);\n                        const complementaryJobs = generateComplementaryJobs(totalToCreate, statsData);\n                        console.log(`‚úÖ ${complementaryJobs.length} vagas complementares criadas`);\n                        // Combinar vagas reais com complementares\n                        const allJobs = [\n                            ...formattedJobs,\n                            ...complementaryJobs\n                        ];\n                        return {\n                            success: true,\n                            data: allJobs,\n                            meta: {\n                                totalJobs: allJobs.length,\n                                realJobs: formattedJobs.length,\n                                complementaryJobs: complementaryJobs.length,\n                                lastUpdate: new Date().toISOString(),\n                                source: 'Backend + Complementares'\n                            }\n                        };\n                    } catch (statsError) {\n                        console.log('‚ö†Ô∏è Erro ao buscar estat√≠sticas:', statsError.message);\n                        // Fallback: criar 100 vagas complementares\n                        const complementaryJobs = generateComplementaryJobs(97, {});\n                        const allJobs = [\n                            ...formattedJobs,\n                            ...complementaryJobs\n                        ];\n                        return {\n                            success: true,\n                            data: allJobs,\n                            meta: {\n                                totalJobs: allJobs.length,\n                                realJobs: formattedJobs.length,\n                                complementaryJobs: complementaryJobs.length,\n                                lastUpdate: new Date().toISOString(),\n                                source: 'Backend + Fallback'\n                            }\n                        };\n                    }\n                }\n                // Se temos vagas suficientes, retornar apenas as reais\n                return {\n                    success: true,\n                    data: formattedJobs,\n                    meta: {\n                        totalJobs: formattedJobs.length,\n                        realJobs: formattedJobs.length,\n                        complementaryJobs: 0,\n                        lastUpdate: new Date().toISOString(),\n                        source: 'Backend Apenas'\n                    }\n                };\n            } catch (error) {\n                console.error('‚ùå Erro ao buscar vagas:', error);\n                // Fallback: buscar estat√≠sticas e criar vagas complementares\n                console.log('‚ö†Ô∏è Nenhuma vaga real encontrada, buscando estat√≠sticas...');\n                try {\n                    const statsResponse = await fetch(`${BACKEND_URL}/api/stats`, {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'User-Agent': 'Frontend-Jobs-API'\n                        }\n                    });\n                    let statsData = {};\n                    if (statsResponse.ok) {\n                        statsData = await statsResponse.json();\n                        console.log('üìä Estat√≠sticas recebidas:', statsData);\n                    }\n                    let complementaryJobs = [];\n                    if (statsData && statsData.totalJobs) {\n                        const totalToCreate = Math.min(statsData.totalJobs, 100);\n                        console.log(`üìä Backend indica ${statsData.totalJobs} vagas totais, criando ${totalToCreate} vagas complementares...`);\n                        complementaryJobs = generateComplementaryJobs(totalToCreate, statsData);\n                        console.log(`‚úÖ ${complementaryJobs.length} vagas complementares criadas baseadas nas estat√≠sticas do backend`);\n                    } else {\n                        // Se n√£o h√° estat√≠sticas, criar 100 vagas padr√£o\n                        complementaryJobs = generateComplementaryJobs(100, {});\n                    }\n                    return {\n                        success: true,\n                        data: complementaryJobs,\n                        meta: {\n                            totalJobs: complementaryJobs.length,\n                            internalJobs: 0,\n                            externalJobs: complementaryJobs.length,\n                            lastUpdate: new Date().toISOString(),\n                            source: 'Backend Stats (Fallback)'\n                        }\n                    };\n                } catch (statsError) {\n                    console.error('‚ùå Erro ao buscar estat√≠sticas:', statsError);\n                    // Fallback final: retornar vagas b√°sicas\n                    const fallbackJobs = generateComplementaryJobs(100, {\n                        totalJobs: 100\n                    });\n                    return {\n                        success: true,\n                        data: fallbackJobs,\n                        meta: {\n                            totalJobs: fallbackJobs.length,\n                            internalJobs: 0,\n                            externalJobs: fallbackJobs.length,\n                            lastUpdate: new Date().toISOString(),\n                            error: 'Fallback mode - backend not available'\n                        }\n                    };\n                }\n            }\n        }\n        // Chamar a fun√ß√£o principal e retornar os resultados\n        const result = await getAllJobsCombined();\n        // Garantir que sempre temos jobs no formato correto\n        if (result.success && result.data && Array.isArray(result.data)) {\n            res.status(200).json({\n                success: true,\n                jobs: result.data,\n                data: result.data,\n                total: result.data.length,\n                meta: result.meta\n            });\n        } else {\n            res.status(200).json({\n                success: false,\n                jobs: [],\n                data: [],\n                total: 0,\n                message: 'Nenhuma vaga encontrada'\n            });\n        }\n    } catch (error) {\n        console.error('‚ùå Erro geral na API:', error);\n        return res.status(500).json({\n            success: false,\n            message: 'Erro ao buscar vagas',\n            data: [],\n            jobs: [],\n            total: 0,\n            error: error.message\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/all-jobs-combined.js\n");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fall-jobs-combined&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fall-jobs-combined.js&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();